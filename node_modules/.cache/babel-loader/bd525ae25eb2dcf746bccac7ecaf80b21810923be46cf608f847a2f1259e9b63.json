{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\web_development\\\\Project1\\\\demo\\\\src\\\\components\\\\MyCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddGoals from \"./AddGoals\";\nimport EverdayGoal from \"./EverdayGoal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet i = 0;\nfunction MyCalendar() {\n  _s();\n  const [currMonth, setCurrMonth] = useState(\"\");\n  const [currYear, setCurrYear] = useState(\"\");\n  const [prevDates, setPrevDates] = useState([]);\n  const [currDates, setCurrDates] = useState([]);\n  const [nextDates, setNextDates] = useState([]);\n  const [date, setDate] = useState();\n  const [year, setYear] = useState();\n  const [month, setMonth] = useState();\n  const [color, setColor] = useState(\"yellow\");\n  const [index, setIndex] = useState(1);\n  const [clickedDates, setClickedDates] = useState([]);\n  const [cond, setCond] = useState(false);\n  const handleDateClick = id => {\n    setClickedDates(prevClickedDates => prevClickedDates.includes(id) ? prevClickedDates.filter(data => {\n      return data !== id;\n    }) : [...prevClickedDates, id]);\n  };\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  console.log(months.includes(\"march\"));\n  function update() {\n    setIndex(31);\n    const currentDate1 = new Date();\n    setDate(currentDate1);\n    setYear(currentDate1.getFullYear());\n    setMonth(currentDate1.getMonth());\n\n    // setDate(new Date());\n    // setYear(date.getFullYear());\n    // setMonth(date.getMonth());\n    // const day = document.querySelector(\".calendar-dates\");\n\n    // const prenexIcons = document.querySelectorAll(\".calendar-navigation span\");\n\n    // Array of month names\n\n    // Function to generate the calendar\n    const manipulate = () => {\n      // Get the first day of the month\n      let dayone = new Date(year, month, 1).getDay();\n\n      // Get the last date of the month\n      let lastdate = new Date(year, month + 1, 0).getDate();\n\n      // Get the day of the last date of the month\n      let dayend = new Date(year, month, lastdate).getDay();\n\n      // Get the last date of the previous month\n      let monthlastdate = new Date(year, month, 0).getDate();\n\n      // Variable to store the generated calendar HTML\n      // let lit = \"\";\n\n      // Loop to add the last dates of the previous month\n\n      var newElem = [];\n      for (let i = dayone; i > 0; i--) {\n        newElem.push(monthlastdate - i + 1);\n        // lit += `<li class=\"inactive\">${monthlastdate - i + 1}</li>`;\n      }\n      setPrevDates(newElem);\n      newElem = [];\n\n      // Loop to add the dates of the current month\n\n      for (let i = 1; i <= lastdate; i++) {\n        // Check if the current date is today\n\n        newElem.push(i);\n        // lit += `<li  class=\"${isToday}\">${i}</li>`;\n      }\n      setCurrDates(newElem);\n      newElem = [];\n      // Loop to add the first dates of the next month\n      for (let i = dayend; i < 6; i++) {\n        // lit += `<li class=\"inactive\">${i - dayend + 1}</li>`;\n        newElem.push(i - dayend + 1);\n      }\n      setNextDates(newElem);\n\n      // Update the text of the current date element\n      // with the formatted current month and year\n\n      setCurrMonth(months[month]);\n      setCurrYear(year);\n\n      // update the HTML of the dates element\n      // with the generated calendar\n      // day.innerHTML = lit;\n    };\n    manipulate();\n\n    // Attach a click event listener to each icon\n    // prenexIcons.forEach((icon) => {\n    //   // When an icon is clicked\n    //   icon.addEventListener(\"click\", () => {\n    //     // Check if the icon is \"calendar-prev\"\n    //     // or \"calendar-next\"\n    //     month = icon.id === \"calendar-prev\" ? month - 1 : month + 1;\n\n    //     // Check if the month is out of range\n    //     if (month < 0 || month > 11) {\n    //       // Set the date to the first day of the\n    //       // month with the new year\n    //       date = new Date(year, month, new Date().getDate());\n\n    //       // Set the year to the new year\n    //       year = date.getFullYear();\n\n    //       // Set the month to the new month\n    //       month = date.getMonth();\n    //     } else {\n    //       // Set the date to the current date\n    //       date = new Date();\n    //     }\n\n    //     // Call the manipulate function to\n    //     // update the calendar display\n    //     manipulate();\n    //   });\n    // });\n  }\n  useEffect(() => {\n    update();\n  }, []);\n  // function handleClick(id) {\n  //   const element = document.getElementById(id);\n  //   console.log(id);\n\n  //   if (element.classList.contains(\"click\")) element.classList.remove(\"click\");\n  //   else element.classList.add(\"click\");\n  // }\n  const manipulate = () => {\n    // Get the first day of the month\n    let x = new Date(year, month, 1);\n    let dayone = new Date(year, month, 1).getDay();\n\n    // Get the last date of the month\n    let lastdate = new Date(year, month + 1, 0).getDate();\n\n    // Get the day of the last date of the month\n    let dayend = new Date(year, month, lastdate).getDay();\n\n    // Get the last date of the previous month\n    let monthlastdate = new Date(year, month, 0).getDate();\n\n    // Variable to store the generated calendar HTML\n    // let lit = \"\";\n\n    // Loop to add the last dates of the previous month\n\n    var newElem = [];\n    for (let i = dayone; i > 0; i--) {\n      newElem.push(monthlastdate - i + 1);\n      // lit += `<li class=\"inactive\">${monthlastdate - i + 1}</li>`;\n    }\n    setPrevDates(newElem);\n    newElem = [];\n\n    // Loop to add the dates of the current month\n    for (let i = 1; i <= lastdate; i++) {\n      // Check if the current date is today\n\n      newElem.push(i);\n      // lit += `<li  class=\"${isToday}\">${i}</li>`;\n    }\n    setCurrDates(newElem);\n    newElem = [];\n    // Loop to add the first dates of the next month\n    for (let i = dayend; i < 6; i++) {\n      // lit += `<li class=\"inactive\">${i - dayend + 1}</li>`;\n      newElem.push(i - dayend + 1);\n    }\n    setNextDates(newElem);\n\n    // Update the text of the current date element\n    // with the formatted current month and year\n\n    setCurrMonth(months[month]);\n    setCurrYear(year);\n\n    // update the HTML of the dates element\n    // with the generated calendar\n    // day.innerHTML = lit;\n  };\n  function updateNext() {\n    var y = month + 1;\n    setMonth(y);\n    if (y > 11) {\n      setMonth(0);\n      var x = new Date(year + 1, 0, new Date().getDate());\n      setDate(x);\n\n      // Set the year to the new year\n      setYear(x.getFullYear());\n\n      // Set the month to the new month\n      setMonth(x.getMonth());\n    } else {\n      // Set the date to the current date\n\n      setDate(new Date());\n    }\n  }\n  function updatePrev() {\n    let y = month - 1;\n    setMonth(month - 1);\n    if (y < 0) {\n      setMonth(11);\n      let x = new Date(year - 1, 11, new Date().getDate());\n      setDate(x);\n\n      // Set the year to the new year\n      setYear(x.getFullYear());\n\n      // Set the month to the new month\n      setMonth(x.getMonth());\n    } else {\n      // Set the date to the current date\n\n      setDate(new Date());\n    }\n  }\n  useEffect(() => {\n    manipulate();\n  }, [month]);\n  const [green, setGreen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"d-flex justify-content-center py-4  \",\n      children: \"ChallengeQuest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"calendar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          class: \"calendar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"calendar-current-date\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center align-items-center\",\n              children: [currMonth, \" \", currYear, /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"green\",\n                  width: \"20px\",\n                  height: \"20px\",\n                  marginLeft: \"200px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"1rem\"\n                },\n                children: \"-To check in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  borderRadius: \"50%\",\n                  backgroundColor: \"orange\",\n                  width: \"20px\",\n                  height: \"20px\",\n                  marginLeft: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"1rem\"\n                },\n                children: \"-To add goals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"calendar-navigation\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"calendar-prev\",\n              class: \"material-symbols-rounded \",\n              onClick: updatePrev,\n              children: \"<\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"calendar-next\",\n              class: \"material-symbols-rounded\",\n              onClick: updateNext,\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"calendar-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"calendar-weekdays\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Sun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Mon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Tue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Wed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Thu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Fri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Sat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            class: \"calendar-dates\",\n            children: [prevDates.map((elem, index) => {\n              console.log(index);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                class: \"inactive\",\n                children: elem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 26\n              }, this);\n            }), currDates.map(elem => {\n              let isToday = elem === new Date().getDate() && month === new Date().getMonth() && year === new Date().getFullYear() ? \"active\" : \"\";\n              const id = `${elem}_${month}_${year}`;\n              const isClicked = clickedDates.includes(id);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  lineHeight: \"22px\"\n                },\n                id: id,\n                className: `${isToday} ${isClicked ? \"click\" : \"\"}`,\n                children: [elem, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex  \",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      borderRadius: \"50%\",\n                      backgroundColor: \"green\",\n                      width: \"15px\",\n                      height: \"15px\",\n                      marginLeft: \"50px\"\n                    },\n                    onClick: () => handleDateClick(id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      borderRadius: \"50%\",\n                      backgroundColor: \"orange\",\n                      width: \"15px\",\n                      height: \"15px\",\n                      marginLeft: \"5px\"\n                    },\n                    onClick: () => {\n                      cond === true ? setCond(false) : setCond(true);\n                    },\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this);\n            }), nextDates.map(elem => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"inactive\",\n                children: elem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 26\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cond && /*#__PURE__*/_jsxDEV(EverdayGoal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MyCalendar, \"lTwUe9iYgzeS4o7d36G+VV3xk2k=\");\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","useEffect","AddGoals","EverdayGoal","jsxDEV","_jsxDEV","Fragment","_Fragment","i","MyCalendar","_s","currMonth","setCurrMonth","currYear","setCurrYear","prevDates","setPrevDates","currDates","setCurrDates","nextDates","setNextDates","date","setDate","year","setYear","month","setMonth","color","setColor","index","setIndex","clickedDates","setClickedDates","cond","setCond","handleDateClick","id","prevClickedDates","includes","filter","data","months","console","log","update","currentDate1","Date","getFullYear","getMonth","manipulate","dayone","getDay","lastdate","getDate","dayend","monthlastdate","newElem","push","x","updateNext","y","updatePrev","green","setGreen","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","style","borderRadius","backgroundColor","width","height","marginLeft","fontSize","onClick","map","elem","isToday","isClicked","lineHeight","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/web_development/Project1/demo/src/components/MyCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AddGoals from \"./AddGoals\";\r\nimport EverdayGoal from \"./EverdayGoal\";\r\nlet i = 0;\r\nfunction MyCalendar() {\r\n  const [currMonth, setCurrMonth] = useState(\"\");\r\n  const [currYear, setCurrYear] = useState(\"\");\r\n  const [prevDates, setPrevDates] = useState([]);\r\n  const [currDates, setCurrDates] = useState([]);\r\n  const [nextDates, setNextDates] = useState([]);\r\n  const [date, setDate] = useState();\r\n  const [year, setYear] = useState();\r\n  const [month, setMonth] = useState();\r\n  const [color, setColor] = useState(\"yellow\");\r\n  const [index, setIndex] = useState(1);\r\n  const [clickedDates, setClickedDates] = useState([]);\r\n  const [cond, setCond] = useState(false);\r\n  const handleDateClick = (id) => {\r\n    setClickedDates((prevClickedDates) =>\r\n      prevClickedDates.includes(id)\r\n        ? prevClickedDates.filter((data) => {\r\n            return data !== id;\r\n          })\r\n        : [...prevClickedDates, id]\r\n    );\r\n  };\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  console.log(months.includes(\"march\"));\r\n  function update() {\r\n    setIndex(31);\r\n    const currentDate1 = new Date();\r\n    setDate(currentDate1);\r\n    setYear(currentDate1.getFullYear());\r\n    setMonth(currentDate1.getMonth());\r\n\r\n    // setDate(new Date());\r\n    // setYear(date.getFullYear());\r\n    // setMonth(date.getMonth());\r\n    // const day = document.querySelector(\".calendar-dates\");\r\n\r\n    // const prenexIcons = document.querySelectorAll(\".calendar-navigation span\");\r\n\r\n    // Array of month names\r\n\r\n    // Function to generate the calendar\r\n    const manipulate = () => {\r\n      // Get the first day of the month\r\n      let dayone = new Date(year, month, 1).getDay();\r\n\r\n      // Get the last date of the month\r\n      let lastdate = new Date(year, month + 1, 0).getDate();\r\n\r\n      // Get the day of the last date of the month\r\n      let dayend = new Date(year, month, lastdate).getDay();\r\n\r\n      // Get the last date of the previous month\r\n      let monthlastdate = new Date(year, month, 0).getDate();\r\n\r\n      // Variable to store the generated calendar HTML\r\n      // let lit = \"\";\r\n\r\n      // Loop to add the last dates of the previous month\r\n\r\n      var newElem = [];\r\n      for (let i = dayone; i > 0; i--) {\r\n        newElem.push(monthlastdate - i + 1);\r\n        // lit += `<li class=\"inactive\">${monthlastdate - i + 1}</li>`;\r\n      }\r\n      setPrevDates(newElem);\r\n      newElem = [];\r\n\r\n      // Loop to add the dates of the current month\r\n\r\n      for (let i = 1; i <= lastdate; i++) {\r\n        // Check if the current date is today\r\n\r\n        newElem.push(i);\r\n        // lit += `<li  class=\"${isToday}\">${i}</li>`;\r\n      }\r\n      setCurrDates(newElem);\r\n      newElem = [];\r\n      // Loop to add the first dates of the next month\r\n      for (let i = dayend; i < 6; i++) {\r\n        // lit += `<li class=\"inactive\">${i - dayend + 1}</li>`;\r\n        newElem.push(i - dayend + 1);\r\n      }\r\n      setNextDates(newElem);\r\n\r\n      // Update the text of the current date element\r\n      // with the formatted current month and year\r\n\r\n      setCurrMonth(months[month]);\r\n      setCurrYear(year);\r\n\r\n      // update the HTML of the dates element\r\n      // with the generated calendar\r\n      // day.innerHTML = lit;\r\n    };\r\n\r\n    manipulate();\r\n\r\n    // Attach a click event listener to each icon\r\n    // prenexIcons.forEach((icon) => {\r\n    //   // When an icon is clicked\r\n    //   icon.addEventListener(\"click\", () => {\r\n    //     // Check if the icon is \"calendar-prev\"\r\n    //     // or \"calendar-next\"\r\n    //     month = icon.id === \"calendar-prev\" ? month - 1 : month + 1;\r\n\r\n    //     // Check if the month is out of range\r\n    //     if (month < 0 || month > 11) {\r\n    //       // Set the date to the first day of the\r\n    //       // month with the new year\r\n    //       date = new Date(year, month, new Date().getDate());\r\n\r\n    //       // Set the year to the new year\r\n    //       year = date.getFullYear();\r\n\r\n    //       // Set the month to the new month\r\n    //       month = date.getMonth();\r\n    //     } else {\r\n    //       // Set the date to the current date\r\n    //       date = new Date();\r\n    //     }\r\n\r\n    //     // Call the manipulate function to\r\n    //     // update the calendar display\r\n    //     manipulate();\r\n    //   });\r\n    // });\r\n  }\r\n  useEffect(() => {\r\n    update();\r\n  }, []);\r\n  // function handleClick(id) {\r\n  //   const element = document.getElementById(id);\r\n  //   console.log(id);\r\n\r\n  //   if (element.classList.contains(\"click\")) element.classList.remove(\"click\");\r\n  //   else element.classList.add(\"click\");\r\n  // }\r\n  const manipulate = () => {\r\n    // Get the first day of the month\r\n    let x = new Date(year, month, 1);\r\n    let dayone = new Date(year, month, 1).getDay();\r\n\r\n    // Get the last date of the month\r\n    let lastdate = new Date(year, month + 1, 0).getDate();\r\n\r\n    // Get the day of the last date of the month\r\n    let dayend = new Date(year, month, lastdate).getDay();\r\n\r\n    // Get the last date of the previous month\r\n    let monthlastdate = new Date(year, month, 0).getDate();\r\n\r\n    // Variable to store the generated calendar HTML\r\n    // let lit = \"\";\r\n\r\n    // Loop to add the last dates of the previous month\r\n\r\n    var newElem = [];\r\n    for (let i = dayone; i > 0; i--) {\r\n      newElem.push(monthlastdate - i + 1);\r\n      // lit += `<li class=\"inactive\">${monthlastdate - i + 1}</li>`;\r\n    }\r\n    setPrevDates(newElem);\r\n    newElem = [];\r\n\r\n    // Loop to add the dates of the current month\r\n    for (let i = 1; i <= lastdate; i++) {\r\n      // Check if the current date is today\r\n\r\n      newElem.push(i);\r\n      // lit += `<li  class=\"${isToday}\">${i}</li>`;\r\n    }\r\n    setCurrDates(newElem);\r\n    newElem = [];\r\n    // Loop to add the first dates of the next month\r\n    for (let i = dayend; i < 6; i++) {\r\n      // lit += `<li class=\"inactive\">${i - dayend + 1}</li>`;\r\n      newElem.push(i - dayend + 1);\r\n    }\r\n    setNextDates(newElem);\r\n\r\n    // Update the text of the current date element\r\n    // with the formatted current month and year\r\n\r\n    setCurrMonth(months[month]);\r\n    setCurrYear(year);\r\n\r\n    // update the HTML of the dates element\r\n    // with the generated calendar\r\n    // day.innerHTML = lit;\r\n  };\r\n  function updateNext() {\r\n    var y = month + 1;\r\n    setMonth(y);\r\n\r\n    if (y > 11) {\r\n      setMonth(0);\r\n\r\n      var x = new Date(year + 1, 0, new Date().getDate());\r\n\r\n      setDate(x);\r\n\r\n      // Set the year to the new year\r\n      setYear(x.getFullYear());\r\n\r\n      // Set the month to the new month\r\n      setMonth(x.getMonth());\r\n    } else {\r\n      // Set the date to the current date\r\n\r\n      setDate(new Date());\r\n    }\r\n  }\r\n  function updatePrev() {\r\n    let y = month - 1;\r\n    setMonth(month - 1);\r\n\r\n    if (y < 0) {\r\n      setMonth(11);\r\n      let x = new Date(year - 1, 11, new Date().getDate());\r\n      setDate(x);\r\n\r\n      // Set the year to the new year\r\n      setYear(x.getFullYear());\r\n\r\n      // Set the month to the new month\r\n      setMonth(x.getMonth());\r\n    } else {\r\n      // Set the date to the current date\r\n\r\n      setDate(new Date());\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    manipulate();\r\n  }, [month]);\r\n\r\n  const [green, setGreen] = useState(false);\r\n  return (\r\n    <>\r\n      <h1 className=\"d-flex justify-content-center py-4  \">ChallengeQuest</h1>\r\n      <div className=\"container \">\r\n   \r\n          <div class=\"calendar-container\">\r\n            <header class=\"calendar-header\">\r\n              <p class=\"calendar-current-date\">\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                  {currMonth} {currYear}\r\n                  <div\r\n                    style={{\r\n                      borderRadius: \"50%\",\r\n                      backgroundColor: \"green\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"200px\",\r\n                    }}\r\n                  ></div>\r\n                  <div style={{ fontSize: \"1rem\" }}>-To check in</div>\r\n                  <div\r\n                    style={{\r\n                      borderRadius: \"50%\",\r\n                      backgroundColor: \"orange\",\r\n                      width: \"20px\",\r\n                      height: \"20px\",\r\n                      marginLeft: \"10px\",\r\n                    }}\r\n                  ></div>{\" \"}\r\n                  <div style={{ fontSize: \"1rem\" }}>-To add goals</div>\r\n                </div>\r\n              </p>\r\n\r\n              <div class=\"calendar-navigation\">\r\n                <span\r\n                  id=\"calendar-prev\"\r\n                  class=\"material-symbols-rounded \"\r\n                  onClick={updatePrev}\r\n                >\r\n                  &lt;\r\n                </span>\r\n                <span\r\n                  id=\"calendar-next\"\r\n                  class=\"material-symbols-rounded\"\r\n                  onClick={updateNext}\r\n                >\r\n                  &gt;\r\n                </span>\r\n              </div>\r\n            </header>\r\n\r\n            <div class=\"calendar-body\">\r\n              <ul class=\"calendar-weekdays\">\r\n                <li>Sun</li>\r\n                <li>Mon</li>\r\n                <li>Tue</li>\r\n                <li>Wed</li>\r\n                <li>Thu</li>\r\n                <li>Fri</li>\r\n                <li>Sat</li>\r\n              </ul>\r\n              <ul class=\"calendar-dates\">\r\n                {prevDates.map((elem, index) => {\r\n                  console.log(index);\r\n                  return <li class=\"inactive\">{elem}</li>;\r\n                })}\r\n                {currDates.map((elem) => {\r\n                  let isToday =\r\n                    elem === new Date().getDate() &&\r\n                    month === new Date().getMonth() &&\r\n                    year === new Date().getFullYear()\r\n                      ? \"active\"\r\n                      : \"\";\r\n                  const id = `${elem}_${month}_${year}`;\r\n                  const isClicked = clickedDates.includes(id);\r\n                  return (\r\n                    <li\r\n                      style={{ lineHeight: \"22px\" }}\r\n                      id={id}\r\n                      className={`${isToday} ${isClicked ? \"click\" : \"\"}`}\r\n                    >\r\n                      {elem}\r\n                      <div className=\"d-flex  \">\r\n                        <div\r\n                          style={{\r\n                            borderRadius: \"50%\",\r\n                            backgroundColor: \"green\",\r\n                            width: \"15px\",\r\n                            height: \"15px\",\r\n                            marginLeft: \"50px\",\r\n                          }}\r\n                          onClick={() => handleDateClick(id)}\r\n                        ></div>\r\n                        <div\r\n                          style={{\r\n                            borderRadius: \"50%\",\r\n                            backgroundColor: \"orange\",\r\n                            width: \"15px\",\r\n                            height: \"15px\",\r\n                            marginLeft: \"5px\",\r\n                          }}\r\n                          onClick={() => {\r\n                            cond === true ? setCond(false) : setCond(true);\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })}\r\n\r\n                {nextDates.map((elem) => {\r\n                  return <li className=\"inactive\">{elem}</li>;\r\n                })}\r\n              </ul>\r\n            </div>\r\n     \r\n        </div>\r\n        <div>{cond && <EverdayGoal />}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}