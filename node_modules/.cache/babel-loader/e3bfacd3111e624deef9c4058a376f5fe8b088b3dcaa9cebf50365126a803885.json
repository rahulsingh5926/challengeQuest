{"ast":null,"code":"import { collection, addDoc, getDocs, deleteDoc, updateDoc, doc } from \"firebase/firestore\";\n;\nimport { db } from \"./firebase\";\nconst [st, setSt] = useState(\"\"); // Define st as a state variable\nconst [startDate, setStartDate] = useState([]);\nconst [endDate, setEndDate] = useState();\nconst [id, setId] = useState(\"\");\nconst b = collection(db, \"startdate\");\nexport const startQuest = async () => {\n  const data = await getDocs(b);\n  const filteredData = data.docs.map(doc => ({\n    ...doc.data(),\n    id: doc.id\n  }));\n  setStartDate(filteredData);\n};\nexport const setQuest = async data => {\n  if (data && startDate.length === 0) {\n    await addDoc(b, {\n      startQuest: data\n    });\n    startQuest();\n  }\n};\nexport const update = async (x, newValue) => {\n  // Pass newValue as an argument\n  const z = doc(db, \"startdate\", x);\n  await updateDoc(z, {\n    startQuest: newValue\n  }); // Use newValue instead of st\n  startQuest();\n};","map":{"version":3,"names":["collection","addDoc","getDocs","deleteDoc","updateDoc","doc","db","st","setSt","useState","startDate","setStartDate","endDate","setEndDate","id","setId","b","startQuest","data","filteredData","docs","map","setQuest","length","update","x","newValue","z"],"sources":["C:/Users/HP/Desktop/web_development/Project1/demo/src/components/FunctionStack.js"],"sourcesContent":["import {\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  updateDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\n ;\r\n  import { db } from \"./firebase\";\r\n    const [st, setSt] = useState(\"\"); // Define st as a state variable\r\n    const [startDate, setStartDate] = useState([]);\r\n    const [endDate, setEndDate] = useState();\r\n    const [id, setId] = useState(\"\");\r\n    const b = collection(db, \"startdate\");\r\nexport const startQuest = async () => {\r\n  const data = await getDocs(b);\r\n  const filteredData = data.docs.map((doc) => ({\r\n    ...doc.data(),\r\n    id: doc.id,\r\n  }));\r\n\r\n  setStartDate(filteredData);\r\n};\r\n\r\nexport const setQuest = async (data) => {\r\n  if (data && startDate.length === 0) {\r\n    await addDoc(b, {\r\n      startQuest: data,\r\n    });\r\n    startQuest();\r\n  }\r\n};\r\n\r\nexport const update = async (x, newValue) => {\r\n  // Pass newValue as an argument\r\n  const z = doc(db, \"startdate\", x);\r\n  await updateDoc(z, { startQuest: newValue }); // Use newValue instead of st\r\n  startQuest();\r\n};\r\n"],"mappings":"AAAA,SACEA,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,SAAS,EACTC,SAAS,EACTC,GAAG,QACE,oBAAoB;AAC1B;AACC,SAASC,EAAE,QAAQ,YAAY;AAC7B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AAC9C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,CAAC;AACxC,MAAM,CAACK,EAAE,EAAEC,KAAK,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;AAChC,MAAMO,CAAC,GAAGhB,UAAU,CAACM,EAAE,EAAE,WAAW,CAAC;AACzC,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,IAAI,GAAG,MAAMhB,OAAO,CAACc,CAAC,CAAC;EAC7B,MAAMG,YAAY,GAAGD,IAAI,CAACE,IAAI,CAACC,GAAG,CAAEhB,GAAG,KAAM;IAC3C,GAAGA,GAAG,CAACa,IAAI,CAAC,CAAC;IACbJ,EAAE,EAAET,GAAG,CAACS;EACV,CAAC,CAAC,CAAC;EAEHH,YAAY,CAACQ,YAAY,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAG,MAAOJ,IAAI,IAAK;EACtC,IAAIA,IAAI,IAAIR,SAAS,CAACa,MAAM,KAAK,CAAC,EAAE;IAClC,MAAMtB,MAAM,CAACe,CAAC,EAAE;MACdC,UAAU,EAAEC;IACd,CAAC,CAAC;IACFD,UAAU,CAAC,CAAC;EACd;AACF,CAAC;AAED,OAAO,MAAMO,MAAM,GAAG,MAAAA,CAAOC,CAAC,EAAEC,QAAQ,KAAK;EAC3C;EACA,MAAMC,CAAC,GAAGtB,GAAG,CAACC,EAAE,EAAE,WAAW,EAAEmB,CAAC,CAAC;EACjC,MAAMrB,SAAS,CAACuB,CAAC,EAAE;IAAEV,UAAU,EAAES;EAAS,CAAC,CAAC,CAAC,CAAC;EAC9CT,UAAU,CAAC,CAAC;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}