{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\web_development\\\\Project1\\\\demo\\\\src\\\\components\\\\MyCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyCalendar() {\n  _s();\n  function update() {\n    let date = new Date();\n    let year = date.getFullYear();\n    let month = date.getMonth();\n    const day = document.querySelector(\".calendar-dates\");\n    const currdate = document.querySelector(\".calendar-current-date\");\n    const prenexIcons = document.querySelectorAll(\".calendar-navigation span\");\n\n    // Array of month names\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    // Function to generate the calendar\n    const manipulate = () => {\n      // Get the first day of the month\n      let dayone = new Date(year, month, 1).getDay();\n\n      // Get the last date of the month\n      let lastdate = new Date(year, month + 1, 0).getDate();\n      console.log(lastdate);\n      // Get the day of the last date of the month\n      let dayend = new Date(year, month, lastdate).getDay();\n\n      // Get the last date of the previous month\n      let monthlastdate = new Date(year, month, 0).getDate();\n\n      // Variable to store the generated calendar HTML\n      let lit = \"\";\n\n      // Loop to add the last dates of the previous month\n      console.log(dayone);\n      for (let i = dayone; i > 0; i--) {\n        lit += `<li class=\"inactive\">${monthlastdate - i + 1}</li>`;\n      }\n\n      // Loop to add the dates of the current month\n      for (let i = 1; i <= lastdate; i++) {\n        // Check if the current date is today\n        let isToday = i === date.getDate() && month === new Date().getMonth() && year === new Date().getFullYear() ? \"active\" : \"\";\n        lit += `<li class=\"${isToday}\">${i}</li>`;\n      }\n\n      // Loop to add the first dates of the next month\n      for (let i = dayend; i < 6; i++) {\n        lit += `<li class=\"inactive\">${i - dayend + 1}</li>`;\n      }\n\n      // Update the text of the current date element\n      // with the formatted current month and year\n      currdate.innerText = `${months[month]} ${year}`;\n\n      // update the HTML of the dates element\n      // with the generated calendar\n      day.innerHTML = lit;\n    };\n    manipulate();\n\n    // Attach a click event listener to each icon\n    prenexIcons.forEach(icon => {\n      // When an icon is clicked\n      icon.addEventListener(\"click\", () => {\n        // Check if the icon is \"calendar-prev\"\n        // or \"calendar-next\"\n        month = icon.id === \"calendar-prev\" ? month - 1 : month + 1;\n\n        // Check if the month is out of range\n        if (month < 0 || month > 11) {\n          // Set the date to the first day of the\n          // month with the new year\n          date = new Date(year, month, new Date().getDate());\n\n          // Set the year to the new year\n          year = date.getFullYear();\n\n          // Set the month to the new month\n          month = date.getMonth();\n        } else {\n          // Set the date to the current date\n          date = new Date();\n        }\n\n        // Call the manipulate function to\n        // update the calendar display\n        manipulate();\n      });\n    });\n  }\n  useEffect(() => {\n    update();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"d-flex justify-content-center py-4  \",\n      style: {\n        fontFamily: \"poppins\"\n      },\n      children: \"ChallengeQuest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"calendar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        class: \"calendar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"calendar-current-date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"calendar-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"calendar-prev\",\n            class: \"material-symbols-rounded \",\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"calendar-next\",\n            class: \"material-symbols-rounded\",\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"calendar-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"calendar-weekdays\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Tue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Fri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Sat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"calendar-dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(MyCalendar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","MyCalendar","_s","update","date","Date","year","getFullYear","month","getMonth","day","document","querySelector","currdate","prenexIcons","querySelectorAll","months","manipulate","dayone","getDay","lastdate","getDate","console","log","dayend","monthlastdate","lit","i","isToday","innerText","innerHTML","forEach","icon","addEventListener","id","children","className","style","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/web_development/Project1/demo/src/components/MyCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nfunction MyCalendar() {\r\n  function update() {\r\n    let date = new Date();\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth();\r\n\r\n    const day = document.querySelector(\".calendar-dates\");\r\n\r\n    const currdate = document.querySelector(\".calendar-current-date\");\r\n\r\n    const prenexIcons = document.querySelectorAll(\".calendar-navigation span\");\r\n\r\n    // Array of month names\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    // Function to generate the calendar\r\n    const manipulate = () => {\r\n      // Get the first day of the month\r\n      let dayone = new Date(year, month, 1).getDay();\r\n\r\n      // Get the last date of the month\r\n      let lastdate = new Date(year, month + 1, 0).getDate();\r\n      console.log(lastdate);\r\n      // Get the day of the last date of the month\r\n      let dayend = new Date(year, month, lastdate).getDay();\r\n\r\n      // Get the last date of the previous month\r\n      let monthlastdate = new Date(year, month, 0).getDate();\r\n\r\n      // Variable to store the generated calendar HTML\r\n      let lit = \"\";\r\n\r\n      // Loop to add the last dates of the previous month\r\n      console.log(dayone);\r\n      for (let i = dayone; i > 0; i--) {\r\n        lit += `<li class=\"inactive\">${monthlastdate - i + 1}</li>`;\r\n      }\r\n\r\n      // Loop to add the dates of the current month\r\n      for (let i = 1; i <= lastdate; i++) {\r\n        // Check if the current date is today\r\n        let isToday =\r\n          i === date.getDate() &&\r\n          month === new Date().getMonth() &&\r\n          year === new Date().getFullYear()\r\n            ? \"active\"\r\n            : \"\";\r\n        lit += `<li class=\"${isToday}\">${i}</li>`;\r\n      }\r\n\r\n      // Loop to add the first dates of the next month\r\n      for (let i = dayend; i < 6; i++) {\r\n        lit += `<li class=\"inactive\">${i - dayend + 1}</li>`;\r\n      }\r\n\r\n      // Update the text of the current date element\r\n      // with the formatted current month and year\r\n      currdate.innerText = `${months[month]} ${year}`;\r\n\r\n      // update the HTML of the dates element\r\n      // with the generated calendar\r\n      day.innerHTML = lit;\r\n    };\r\n\r\n    manipulate();\r\n\r\n    // Attach a click event listener to each icon\r\n    prenexIcons.forEach((icon) => {\r\n      // When an icon is clicked\r\n      icon.addEventListener(\"click\", () => {\r\n        // Check if the icon is \"calendar-prev\"\r\n        // or \"calendar-next\"\r\n        month = icon.id === \"calendar-prev\" ? month - 1 : month + 1;\r\n\r\n        // Check if the month is out of range\r\n        if (month < 0 || month > 11) {\r\n          // Set the date to the first day of the\r\n          // month with the new year\r\n          date = new Date(year, month, new Date().getDate());\r\n\r\n          // Set the year to the new year\r\n          year = date.getFullYear();\r\n\r\n          // Set the month to the new month\r\n          month = date.getMonth();\r\n        } else {\r\n          // Set the date to the current date\r\n          date = new Date();\r\n        }\r\n\r\n        // Call the manipulate function to\r\n        // update the calendar display\r\n        manipulate();\r\n      });\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    update();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1\r\n        className=\"d-flex justify-content-center py-4  \"\r\n        style={{ fontFamily: \"poppins\" }}\r\n      >\r\n        ChallengeQuest\r\n      </h1>\r\n      <div class=\"calendar-container\">\r\n        <header class=\"calendar-header\">\r\n          <p class=\"calendar-current-date\"></p>\r\n          <div class=\"calendar-navigation\">\r\n            <span id=\"calendar-prev\" class=\"material-symbols-rounded \">\r\n              &lt;\r\n            </span>\r\n            <span id=\"calendar-next\" class=\"material-symbols-rounded\">\r\n              &gt;\r\n            </span>\r\n          </div>\r\n        </header>\r\n\r\n        <div class=\"calendar-body\">\r\n          <ul class=\"calendar-weekdays\">\r\n            <li>Sun</li>\r\n            <li>Mon</li>\r\n            <li>Tue</li>\r\n            <li>Wed</li>\r\n            <li>Thu</li>\r\n            <li>Fri</li>\r\n            <li>Sat</li>\r\n          </ul>\r\n          <ul class=\"calendar-dates\"></ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}